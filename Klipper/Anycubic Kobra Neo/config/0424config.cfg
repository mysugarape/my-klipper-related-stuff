# This file contains pin mappings for the Anycubic Kobra Go/Neo with HC32F460.
# Most parameter came from the stock Marlin firmware
# Initial config credit: xpeng

# To build the correct firmware, use the following configuration during the setup process for creating the klipper.bin file:
# - Micro-controller: Huada Semiconductor HC32F460
# - Communication interface: Serial (PA3 & PA2) - Anycubic
#
# You also now have two more options to choose from, the "clock speed" and the "app address":
# - The 200MHz option was added in June 2023, see https://github.com/klipper3d/klipper/pull/6291 
#   It should be safe to use the 200MHz clock speed intstead of the 168MHz.
# - About the app address option: also that was added in June 2023, see https://github.com/klipper3d/klipper/pull/6269 
#   This is for the Kobra 2 though, so it's NOT for the Go/Neo and therefore NOTHING SHOULD BE CHANGED THERE. 
# 
# See Klipper's Config_Reference.md for a description of parameters.

# Please uncomment or add the belonging [include] entries. 
# If [include] entries are active whhich files aren't existent, an error message will occur and initialisation won't be successful! 

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

# KAMPS MACRO
[include KAMP_Settings.cfg]
[exclude_object]

#[include gcode.cfg]
#[include adxl345Pico.cfg]
#[include extras.cfg]
#[include 2nd_mcu.cfg]
[include my-macros.cfg]
[include mainsail.cfg]
[include fluidd.cfg]
#[include timelapse.cfg]
[include spoolman.cfg]

#[include filament_adjustments.cfg]

# Show Temperature of Raspberry in Mainview
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[stepper_x]
step_pin: PA12
dir_pin: PA11
enable_pin: !PA15
microsteps: 16
rotation_distance: 40
position_endstop: -7
position_min: -7
position_max: 220
homing_speed: 60
endstop_pin: !PH2
homing_retract_dist: 0

[stepper_y]
step_pin: PA9
dir_pin: PA8
enable_pin: !PA15
microsteps: 16
rotation_distance: 40
position_endstop: -17
position_min:-17
position_max: 220
homing_speed: 60
endstop_pin: ^!PC13
homing_retract_dist: 0


[stepper_z]
step_pin: PC7
dir_pin: !PC6
enable_pin: !PA15
microsteps: 16
rotation_distance: 8
#endstop_pin: probe:z_virtual_endstop
endstop_pin: ^PC14  # "probe:z_virtual_endstop" instead of "^PC14" COULD be used for using the probe as a virtual endstop instead of using the regular z endstop, but imho it's not advisable to do so due to the risk of crashing your nozzle if the probe is faulty
position_min: -5
position_max: 220
#position_endstop: 0
homing_speed: 5
second_homing_speed:1
homing_retract_dist: 2.3

[safe_z_home]
home_xy_position: 0, 0
speed: 65
z_hop: 10  
z_hop_speed: 10

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB15
dir_pin: !PB14
enable_pin: !PA15
microsteps: 16
rotation_distance: 7.77924
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB8
sensor_type: Generic 3950 #seems to give more precise results than the ATC, further tests needed tho.
#sensor_type: ATC Semitec 104GT-2 #stock sensor doesn't seem to be an original ATC type actually
sensor_pin: PC3
min_temp: 0
min_extrude_temp: 190
max_temp: 250 #Stock is 250
#pressure_advance: 0.087 # old value: 0.032
pressure_advance_smooth_time: 0.04 # old value: 0.01
max_extrude_cross_section: 5


[firmware_retraction]
retract_length: 1
retract_speed: 60
unretract_extra_length: 0
unretract_speed: 40

[heater_bed]
heater_pin: PB9
#sensor_type: Generic 3950
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
min_temp: 0
max_temp: 120

[bed_mesh]
speed: 400
horizontal_move_z: 3
mesh_min: 32, 26
mesh_max: 205, 205
probe_count: 6, 6
algorithm: bicubic
mesh_pps: 4, 4
fade_start: 1
fade_end: 10
#fade_target: 0

[screws_tilt_adjust]
screw1: -6, 24
screw1_name: front left screw
screw2: 157, 24
screw2_name: front right screw
screw3: 157, 188
screw3_name: rear right screw
screw4: -6, 188
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M4 #or CCW? Neither one gave correct instructions for all of the three screws actually, further tests needed.

[probe]
pin: PA1
x_offset: 37.5
y_offset: 4
samples: 4
samples_result: average
samples_tolerance: 0.05
samples_tolerance_retries: 6
sample_retract_dist: 0.5
speed:3
lift_speed:3

[controller_fan controller_fan]
#max_power: 0.75
pin: PB12
#cycle_time: 0.000050 # = 20kHz as this seems to be the frequency in the stock firmware, not 100% sure yet tho

[heater_fan extruder_fan]
pin: PB13
#hardware_pwm: True #default: False
cycle_time: 0.000050 # = 20kHz as this seems to be the frequency in the stock firmware, not 100% sure yet ho

[fan]
pin: PB5
cycle_time: 0.000050 # = 20kHz as this seems to be the frequency in the stock firmware referring to xpeng's findings
# cycle_time: 0.000032 #=~31.4kHz (exact: 31.25kHz); 0.130= ~7.7Hz -> creates humming sound around 50-60%; 0.0001=10kHz -> creates high tone sounds; Klipper's default 0.010=100Hz; stock AC fw maybe uses 31.4kHz from FAST_PWM_FAN, even tho it's not activated, but maybe hardcoded as @jojos38 assumes; that would be ~0.00003185
#   The amount of time (in seconds) for each PWM power cycle to the fan. It is recommended this be 10 milliseconds or greater when using software based PWM. The default is 0.010 seconds.

[output_pin enable_pin]
#This is the pin controls bed, hotend, extruder fan, part fan.
pin: PB6
static_value: 1

#[output_pin beeper]
#pin: PB7

#[output_pin bl_pin]
#pin: PC0

#[output_pin tft_rst]
#pin: PB4

[idle_timeout]
timeout: 600

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
#serial: /dev/ttyUSB0
restart_method: command


[printer]
kinematics: cartesian
max_velocity: 500
# max_accel: 3500
max_accel: 1500
# max_accel_to_decel: 2000
max_z_velocity: 20
max_z_accel: 20

#[input_shaper]
#shaper_freq_x: 43.6
#shaper_freq_y: 58.6
#shaper_type: ei
#shaper_freq_x: 31.8
#shaper_freq_y: 45.6
#shaper_type: mvz


[input_shaper]
shaper_freq_x: 52.4
shaper_type_x: ei
shaper_freq_y: 40.8
shaper_type_y: 2hump_ei

# Raspberry PI pico

#[mcu pico]
#serial: /dev/serial/by-id/usb-Klipper_rp2040_E66138935F5F2F37-if00

#[output_pin BEEPER_pin]
#pin: PB7
#pwm: True

# [filament_switch_sensor filament_sensor]  # Support for filament insert and runout detection using a switch sensor 
# pause_on_runout: true
# switch_pin: ^!PC15
##
######################
## Textured BED
## [probe]
## z_offset = 1.771
#######################
## Textured PEI BED
## [probe]
## z_offset = 1.856
#######################
## Stock PEI BED
## [probe]
## z_offset = 2.039
#######################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 17.662
#*# pid_ki = 0.853
#*# pid_kd = 91.400
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 56.555
#*# pid_ki = 0.750
#*# pid_kd = 1066.764
#*#
#*# [stepper_z]
#*# position_endstop = 4.095
#*#
#*# [probe]
#*# z_offset = 1.800
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.726875, 0.543125, 0.523750, 0.515625, 0.520000, 0.568750
#*# 	0.657500, 0.579375, 0.610625, 0.629375, 0.614375, 0.550000
#*# 	0.611250, 0.524375, 0.503125, 0.497500, 0.458125, 0.501250
#*# 	0.567500, 0.508125, 0.527500, 0.550000, 0.545000, 0.529375
#*# 	0.521875, 0.475625, 0.476875, 0.467500, 0.432500, 0.481875
#*# 	0.533750, 0.533750, 0.550625, 0.624375, 0.630625, 0.638750
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 32.0
#*# max_x = 205.0
#*# min_y = 26.0
#*# max_y = 204.95
#*#
#*# [bed_mesh default1]
#*# version = 1
#*# points =
#*# 	-0.071625, -0.075375, -0.083500, -0.114750, -0.166000, -0.225375
#*# 	-0.152875, -0.135375, -0.129750, -0.154125, -0.197875, -0.247875
#*# 	-0.175375, -0.178500, -0.177250, -0.224750, -0.279750, -0.337875
#*# 	-0.224750, -0.216000, -0.208500, -0.237875, -0.287250, -0.341625
#*# 	-0.262250, -0.263500, -0.259750, -0.304125, -0.356000, -0.409125
#*# 	-0.283500, -0.261000, -0.239125, -0.255375, -0.290375, -0.325375
#*# min_x = 32.0
#*# max_x = 205.0
#*# min_y = 26.0
#*# max_y = 204.95
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = lagrange
#*# tension = 0.2
#*#
#*# [bed_mesh default2]
#*# version = 1
#*# points =
#*# 	0.356250, 0.262500, 0.207500, 0.118750, 0.148125, 0.069375
#*# 	0.233750, 0.184375, 0.165000, 0.138125, 0.125000, 0.075625
#*# 	0.203125, 0.149375, 0.118750, 0.055625, 0.012500, -0.020625
#*# 	0.147500, 0.108750, 0.111875, 0.075000, 0.065625, 0.014375
#*# 	0.091875, 0.056875, 0.049375, 0.004375, -0.025625, -0.033125
#*# 	0.085000, 0.072500, 0.100000, 0.091250, 0.112500, 0.094375
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 32.0
#*# max_x = 205.0
#*# min_y = 26.0
#*# max_y = 204.95
#*#
#*# [bed_mesh default4]
#*# version = 1
#*# points =
#*# 	0.311875, 0.217500, 0.191250, 0.144375, 0.105625, 0.099375
#*# 	0.235625, 0.200000, 0.179375, 0.184375, 0.165625, 0.130625
#*# 	0.215625, 0.163125, 0.136250, 0.088750, 0.065625, 0.065625
#*# 	0.162500, 0.136250, 0.140000, 0.140625, 0.143125, 0.119375
#*# 	0.115625, 0.082500, 0.082500, 0.053125, 0.046250, 0.070000
#*# 	0.113125, 0.112500, 0.141250, 0.181875, 0.215000, 0.218125
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 32.0
#*# max_x = 205.0
#*# min_y = 26.0
#*# max_y = 204.95
#*#
#*# [bed_mesh default5]
#*# version = 1
#*# points =
#*# 	0.726875, 0.543125, 0.523750, 0.515625, 0.520000, 0.568750
#*# 	0.657500, 0.579375, 0.610625, 0.629375, 0.614375, 0.550000
#*# 	0.611250, 0.524375, 0.503125, 0.497500, 0.458125, 0.501250
#*# 	0.567500, 0.508125, 0.527500, 0.550000, 0.545000, 0.529375
#*# 	0.521875, 0.475625, 0.476875, 0.467500, 0.432500, 0.481875
#*# 	0.533750, 0.533750, 0.550625, 0.624375, 0.630625, 0.638750
#*# x_count = 6
#*# y_count = 6
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 32.0
#*# max_x = 205.0
#*# min_y = 26.0
#*# max_y = 204.95
